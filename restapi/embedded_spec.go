// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is an API of a secret service. You can save your secret by using the API. You can restrict the access of a secret after the certen number of views or after a certen period of time.",
    "title": "Secret Server",
    "version": "1.0.0"
  },
  "host": "api.your-secret-server.com",
  "basePath": "/v1",
  "paths": {
    "/secret": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "tags": [
          "secret"
        ],
        "summary": "Add a new secret",
        "operationId": "addSecret",
        "parameters": [
          {
            "type": "string",
            "description": "This text will be saved as a secret",
            "name": "secret",
            "in": "formData",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "The secret won't be available after the given number of views. It must be greater than 0.",
            "name": "expireAfterViews",
            "in": "formData",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "The secret won't be available after the given time. The value is provided in minutes. 0 means never expires",
            "name": "expireAfter",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Secret"
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/secret/{hash}": {
      "get": {
        "description": "Returns a single secret",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "tags": [
          "secret"
        ],
        "summary": "Find a secret by hash",
        "operationId": "getSecretByHash",
        "parameters": [
          {
            "type": "string",
            "description": "Unique hash to identify the secret",
            "name": "hash",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Secret"
            }
          },
          "404": {
            "description": "Secret not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Secret": {
      "type": "object",
      "properties": {
        "createdAt": {
          "description": "The date and time of the creation",
          "type": "string",
          "format": "date-time"
        },
        "expiresAt": {
          "description": "The secret cannot be reached after this time",
          "type": "string",
          "format": "date-time"
        },
        "hash": {
          "description": "Unique hash to identify the secrets",
          "type": "string"
        },
        "remainingViews": {
          "description": "How many times the secret can be viewed",
          "type": "integer",
          "format": "int32"
        },
        "secretText": {
          "description": "The secret itself",
          "type": "string"
        }
      },
      "xml": {
        "name": "Secret"
      }
    }
  },
  "tags": [
    {
      "name": "secret",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    }
  ],
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is an API of a secret service. You can save your secret by using the API. You can restrict the access of a secret after the certen number of views or after a certen period of time.",
    "title": "Secret Server",
    "version": "1.0.0"
  },
  "host": "api.your-secret-server.com",
  "basePath": "/v1",
  "paths": {
    "/secret": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "tags": [
          "secret"
        ],
        "summary": "Add a new secret",
        "operationId": "addSecret",
        "parameters": [
          {
            "type": "string",
            "description": "This text will be saved as a secret",
            "name": "secret",
            "in": "formData",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "The secret won't be available after the given number of views. It must be greater than 0.",
            "name": "expireAfterViews",
            "in": "formData",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "The secret won't be available after the given time. The value is provided in minutes. 0 means never expires",
            "name": "expireAfter",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Secret"
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/secret/{hash}": {
      "get": {
        "description": "Returns a single secret",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "tags": [
          "secret"
        ],
        "summary": "Find a secret by hash",
        "operationId": "getSecretByHash",
        "parameters": [
          {
            "type": "string",
            "description": "Unique hash to identify the secret",
            "name": "hash",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Secret"
            }
          },
          "404": {
            "description": "Secret not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Secret": {
      "type": "object",
      "properties": {
        "createdAt": {
          "description": "The date and time of the creation",
          "type": "string",
          "format": "date-time"
        },
        "expiresAt": {
          "description": "The secret cannot be reached after this time",
          "type": "string",
          "format": "date-time"
        },
        "hash": {
          "description": "Unique hash to identify the secrets",
          "type": "string"
        },
        "remainingViews": {
          "description": "How many times the secret can be viewed",
          "type": "integer",
          "format": "int32"
        },
        "secretText": {
          "description": "The secret itself",
          "type": "string"
        }
      },
      "xml": {
        "name": "Secret"
      }
    }
  },
  "tags": [
    {
      "name": "secret",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    }
  ],
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}`))
}
